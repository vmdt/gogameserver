definitions:
  battleship_options_cmd.UpdateBattleshipOptionsCmd:
    properties:
      time_per_turn:
        description: in seconds
        type: integer
      time_place_ship:
        description: in seconds
        type: integer
      who_go_first:
        description: '0: random'
        type: integer
    type: object
  commands.AttackBattleShipCommand:
    properties:
      player_id:
        type: string
      position:
        $ref: '#/definitions/domain.Position'
      room_id:
        type: string
    type: object
  commands.BattleshipOptions:
    properties:
      time_per_turn:
        description: in seconds
        type: integer
      time_place_ship:
        description: in seconds
        type: integer
      who_go_first:
        description: '0: random, 1: player1, 2: player2'
        type: integer
    type: object
  commands.ExternalGrantCommand:
    properties:
      credential:
        type: string
    required:
    - credential
    type: object
  commands.JoinRoomCommand:
    properties:
      name:
        type: string
      player_id:
        type: string
      room_id:
        type: string
      user_id:
        type: string
    required:
    - name
    - room_id
    type: object
  commands.LoginCommand:
    properties:
      email:
        type: string
      password:
        maxLength: 100
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  commands.PlayerCreateRoomCommand:
    properties:
      name:
        type: string
      options:
        $ref: '#/definitions/commands.BattleshipOptions'
      user_id:
        type: string
    required:
    - name
    type: object
  commands.RefreshTokenCommand:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  commands.RegisterUserCommand:
    properties:
      email:
        type: string
      nation:
        type: string
      password:
        maxLength: 100
        minLength: 6
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  commands.SetWhoWinCommand:
    properties:
      player_id:
        type: string
    type: object
  commands.UpdateRoomStatusCommand:
    properties:
      room_id:
        type: string
      status:
        type: string
    required:
    - room_id
    - status
    type: object
  domain.Position:
    properties:
      x:
        type: integer
      "y":
        type: integer
    type: object
  domain.Ship:
    properties:
      name:
        type: string
      orientation:
        description: '"horizontal" or "vertical"'
        type: string
      positions:
        items:
          $ref: '#/definitions/domain.Position'
        type: array
      size:
        type: integer
    type: object
  domain.Shot:
    properties:
      position:
        $ref: '#/definitions/domain.Position'
      status:
        description: e.g., "hit", "miss"
        type: string
    type: object
  dtos.BattleshipGame:
    properties:
      created_at:
        type: string
      opponent_shot_at:
        type: string
      opponent_shots:
        items:
          $ref: '#/definitions/domain.Shot'
        type: array
      player_id:
        type: string
      room_id:
        type: string
      ships:
        items:
          $ref: '#/definitions/domain.Ship'
        type: array
      shots:
        items:
          $ref: '#/definitions/domain.Shot'
        type: array
      updated_at:
        type: string
    type: object
  dtos.BattleshipOptionsDTO:
    properties:
      id:
        type: string
      room_id:
        description: UUID of the room
        type: string
      start_place_at:
        description: when the player can start placing ships
        type: string
      time_per_turn:
        description: in seconds
        type: integer
      time_place_ship:
        description: in seconds
        type: integer
      who_go_first:
        description: '0: random, 1: player1, 2: player2'
        type: integer
    type: object
  dtos.PlayerDTO:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  dtos.RoomDTO:
    properties:
      created_at:
        type: string
      id:
        type: string
      is_ended:
        type: boolean
      options:
        $ref: '#/definitions/dtos.BattleshipOptionsDTO'
      status:
        type: string
      turn:
        type: integer
      updated_at:
        type: string
      who_win:
        type: integer
    type: object
  dtos.RoomPlayerDTO:
    properties:
      disconnected_at:
        type: string
      is_disconnected:
        type: boolean
      is_host:
        type: boolean
      is_ready:
        type: boolean
      me:
        type: integer
      player:
        $ref: '#/definitions/dtos.PlayerDTO'
      player_id:
        type: string
      room:
        $ref: '#/definitions/dtos.RoomDTO'
      room_id:
        type: string
      status:
        type: integer
    type: object
  dtos.SunkShipDTO:
    properties:
      is_sunk:
        type: boolean
      ship_name:
        type: string
      size:
        type: integer
    type: object
  dtos.SunkShipsDTO:
    properties:
      num_of_sunk:
        type: integer
      player_id:
        type: string
      ships:
        items:
          $ref: '#/definitions/dtos.SunkShipDTO'
        type: array
    type: object
  dtos.TokenPairDTO:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      refresh_token:
        type: string
    type: object
  dtos.UserAuthDTO:
    properties:
      tokens:
        $ref: '#/definitions/dtos.TokenPairDTO'
      user:
        $ref: '#/definitions/dtos.UserDTO'
    type: object
  dtos.UserDTO:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      nation:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  dtos.WhoWinDTO:
    properties:
      room_id:
        type: string
      win_status:
        items:
          $ref: '#/definitions/dtos.WinStatusDTO'
        type: array
    type: object
  dtos.WinStatusDTO:
    properties:
      placed:
        type: boolean
      player_id:
        type: string
      win:
        type: boolean
    type: object
  player_room_cmd.UpdateRoomPlayerCommand:
    properties:
      disconnected_at:
        type: string
      is_disconnected:
        type: boolean
      is_host:
        type: boolean
      is_ready:
        type: boolean
    type: object
  queries.CheckSunkShipStatusQuery:
    properties:
      playerId:
        type: string
      roomId:
        type: string
    required:
    - playerId
    - roomId
    type: object
info:
  contact: {}
paths:
  /api/v1/boardgame/battleship:
    post:
      consumes:
      - application/json
      description: Creates a new Battleship game board with the provided player, room,
        ships, and shots information.
      parameters:
      - description: Battleship Game Data
        in: body
        name: BattleshipGame
        required: true
        schema:
          $ref: '#/definitions/dtos.BattleshipGame'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.BattleshipGame'
        "400":
          description: Invalid request or Validation error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create Battleship Board
      tags:
      - Board.Battleship
  /api/v1/boardgame/battleship/attack:
    put:
      consumes:
      - application/json
      description: Attacks a position on the Battleship game board for a specific
        player and
      parameters:
      - description: Attack Battleship Command Data
        in: body
        name: AttackBattleShipCommand
        required: true
        schema:
          $ref: '#/definitions/commands.AttackBattleShipCommand'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Invalid request or Validation error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Attack Battleship Board
      tags:
      - Board.Battleship
  /api/v1/boardgame/battleship/room/{room_id}/check-who-win:
    get:
      consumes:
      - application/json
      description: Checks who wins the Battleship game for a specific room.
      parameters:
      - description: Room ID
        in: path
        name: room_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.WhoWinDTO'
        "400":
          description: Invalid request or Validation error
          schema:
            type: string
        "404":
          description: Room not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Check Who Wins
      tags:
      - Board.Battleship
  /api/v1/boardgame/battleship/room/{room_id}/player/{player_id}:
    get:
      consumes:
      - application/json
      description: Retrieves the Battleship game board for a specific player and room.
      parameters:
      - description: Player ID
        in: path
        name: player_id
        required: true
        type: string
      - description: Room ID
        in: path
        name: room_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.BattleshipGame'
        "400":
          description: Invalid request or Validation error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get Battleship Board
      tags:
      - Board.Battleship
  /api/v1/boardgame/battleship/room/{room_id}/player/{player_id}/check-sunk-ships:
    get:
      consumes:
      - application/json
      description: Checks the status of sunk ships for a specific player in a room.
      parameters:
      - description: Check Sunk Ship Status Query Data
        in: body
        name: CheckSunkShipStatusQuery
        required: true
        schema:
          $ref: '#/definitions/queries.CheckSunkShipStatusQuery'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.SunkShipsDTO'
        "400":
          description: Invalid request or Validation error
          schema:
            type: string
        "404":
          description: Player or room not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Check Sunk Ship Status
      tags:
      - Board.Battleship
  /api/v1/identity/google:
    post:
      consumes:
      - application/json
      description: Authenticates a user using Google SSO and returns the authentication
        token.
      parameters:
      - description: Google SSO details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/commands.ExternalGrantCommand'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.UserAuthDTO'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Google SSO login
      tags:
      - Identity
  /api/v1/identity/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns the authentication token.
      parameters:
      - description: User login details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/commands.LoginCommand'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.UserAuthDTO'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - Identity
  /api/v1/identity/refresh:
    post:
      consumes:
      - application/json
      description: Refreshes the user's authentication token using a refresh token.
      parameters:
      - description: Refresh token details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/commands.RefreshTokenCommand'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.TokenPairDTO'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Refresh user token
      tags:
      - Identity
  /api/v1/identity/register:
    post:
      consumes:
      - application/json
      description: Registers a new user and returns the authentication token.
      parameters:
      - description: User registration details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/commands.RegisterUserCommand'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.UserAuthDTO'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - Identity
  /api/v1/room/{room_id}/battleship-options:
    put:
      consumes:
      - application/json
      description: Allows updating the battleship options for a specific room
      parameters:
      - description: Update Battleship Options Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/battleship_options_cmd.UpdateBattleshipOptionsCmd'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.BattleshipOptionsDTO'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update Battleship Options
      tags:
      - Room.Battleship
  /api/v1/room/{room_id}/players/{player_id}:
    delete:
      consumes:
      - application/json
      description: Removes a player from the specified room.
      parameters:
      - description: Room ID (UUID)
        in: path
        name: room_id
        required: true
        type: string
      - description: Player ID (UUID)
        in: path
        name: player_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: boolean
        "400":
          description: bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Kick a player from a room
      tags:
      - Room.Players
    put:
      consumes:
      - application/json
      description: Partially updates the information of a player in a room.
      parameters:
      - description: Room ID (UUID)
        in: path
        name: room_id
        required: true
        type: string
      - description: Player ID (UUID)
        in: path
        name: player_id
        required: true
        type: string
      - description: Fields to update
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/player_room_cmd.UpdateRoomPlayerCommand'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.RoomPlayerDTO'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a player in a room
      tags:
      - Room.Players
  /api/v1/room/{roomId}/set-who-win:
    put:
      consumes:
      - application/json
      description: Sets the winner of a room based on the player ID.
      parameters:
      - description: Set Who Win Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/commands.SetWhoWinCommand'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.RoomDTO'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Set Who Win
      tags:
      - Room
  /api/v1/room/player/create:
    post:
      consumes:
      - application/json
      description: Allows a player to create a new room with a name and user ID
      parameters:
      - description: Player Create Room Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/commands.PlayerCreateRoomCommand'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.RoomPlayerDTO'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Player creates a new room
      tags:
      - Room.Player
  /api/v1/room/player/join:
    post:
      consumes:
      - application/json
      description: Allows a player to join an existing room with a name, user ID,
      parameters:
      - description: Player Join Room
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/commands.JoinRoomCommand'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.RoomPlayerDTO'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Player joins a room
      tags:
      - Room.Player
  /api/v1/room/status:
    put:
      consumes:
      - application/json
      description: Allows updating the status of a room by its ID
      parameters:
      - description: Update Room Status Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/commands.UpdateRoomStatusCommand'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.RoomDTO'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update room status
      tags:
      - Room
swagger: "2.0"
